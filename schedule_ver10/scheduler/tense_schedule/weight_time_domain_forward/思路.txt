

1.當時間來到t時，已經有幾個packet在link上，依照path_dic來知道這些packets在下一個時間點要傳到哪一條link，之後存放到next_schedule中

2.再放入next_schedule時，要同時檢測裡面有沒有已經存在的link，有的話表示先前已經有欲占用的packet在裡面(此時衝突發生)，這時候就要比較packet內的資訊

3.比較結束後win_packet會保留在next_schedule裡面，並在下一個時間點佔據該link；而lose_packet需要在下下次時間的時間與新欲占用同Link的packet競爭(若下下次佔用情況為空，則可直接排入)



上週目標是想要把deadline/path_length當作篩選目標,目前還在找邏輯錯誤。

排的時候發現可能在這個時間點會有多個packet在搶奪，需要非常多的判斷式進行，可能還需要再花一周的時間解析...
目前大致分了
next_schedule跟reschedule來存資料，reschedule的部分可能要多一些紀錄資料的方式(同條link上有多個packet,這樣的話pakcet可能要用piority紀錄?)


目前有將程式寫成可以選擇方法的功能，以方便往後管理


